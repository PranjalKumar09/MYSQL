

    CONCAT(first_col, sec_col)

    CONCAT(first_word, sec_word, ...)

    $ select concat("hey", "bhai");
+-----------------------+
| concat("hey", "bhai") |
+-----------------------+
| heybhai               |
+-----------------------+

    $  select concat("hey", "bhai", " Hello");
+---------------------------------+
| concat("hey", "bhai", " Hello") |
+---------------------------------+
| heybhai Hello                   |
+---------------------------------+

    $  select * from employees;
+--------+--------+------------+---------+
| emp_id | name   | desig      | dept    |
+--------+--------+------------+---------+
|    101 | Raju   | Manager    | Loan    |
|    103 | Paul   | Associate  | IT      |
|    104 | Alex   | Accountant | Account |
|    105 | Victor | Associate  | Deposit |
+--------+--------+------------+---------+

    $ select emp_id , concat(desig ," ", dept) as work  from employees;
+--------+--------------------+
| emp_id | work               |
+--------+--------------------+
|    101 | Manager Loan       |
|    103 | Associate IT       |
|    104 | Accountant Account |
|    105 | Associate Deposit  |
+--------+--------------------+




    CONCAT_WS ("-", ----)
    =====================  
        ws means with seprator

        $ select concat_ws("-", "Namaste","Duniya");
+------------------------------------+
| concat_ws("-", "Namaste","Duniya") |
+------------------------------------+
| Namaste-Duniya                     |
+------------------------------------+


        $ select concat_ws(":", emp_id ,name ,  desig , dept) from employees;
+----------------------------------------------+
| concat_ws(":", emp_id ,name ,  desig , dept) |
+----------------------------------------------+
| 101:Raju:Manager:Loan                        |
| 103:Paul:Associate:IT                        |
| 104:Alex:Accountant:Account                  |
| 105:Victor:Associate:Deposit                 |
+----------------------------------------------+




    SUBSTRING
    =========

    There is 1 based indexing, including both indexes

    $ select substring("hello everyone", 1, 4);
+-----------------------------------+
| substring("hello everyone", 1, 4) |
+-----------------------------------+
| hell                              |
+-----------------------------------+

    $ select substring("hello everyone", 1);
+--------------------------------+
| substring("hello everyone", 1) |
+--------------------------------+
| hello everyone                 |
+--------------------------------+
    If end position not given upto end it will printed

    $ select substring("hello everyone", -4);
+---------------------------------+
| substring("hello everyone", -4) |
+---------------------------------+
| yone                            |
+---------------------------------+

    $ select substring(emp_id , -1) from employees;
+------------------------+
| substring(emp_id , -1) |
+------------------------+
| 1                      |
| 3                      |
| 4                      |
| 5                      |
+------------------------+



    REPLACE
    ======
        REPLACE(str, from_str, to_str);

        $ select replace('Hello Buddy' , 'Hello', "Hai");
+-----------------------------------------+
| replace('Hello Buddy' , 'Hello', "Hai") |
+-----------------------------------------+
| Hai Buddy                               |
+-----------------------------------------+

        $ select replace(emp_id , 10 , 10000) as NewEmpIDs, name from employees;
+-----------+--------+
| NewEmpIDs | name   |
+-----------+--------+
| 100001    | Raju   |
| 100003    | Paul   |
| 100004    | Alex   |
| 100005    | Victor |
+-----------+--------+

        $ select replace(emp_id , 10 , "EMP") as NewEmpIDs, name from employees;
+-----------+--------+
| NewEmpIDs | name   |
+-----------+--------+
| EMP1      | Raju   |
| EMP3      | Paul   |
| EMP4      | Alex   |
| EMP5      | Victor |
+-----------+--------+



    REVERSE
    =======
        $ select reverse("Hello");
+------------------+
| reverse("Hello") |
+------------------+
| olleH            |
+------------------+

    LOWER & UPPER
    =============
    we can also use   UCASE   in place of upper 
    $ select upper("Hello World");
+----------------------+
| upper("Hello World") |
+----------------------+
| HELLO WORLD          |
+----------------------+

    $ select lower("Hello World");
+----------------------+
| lower("Hello World") |
+----------------------+
| hello world          |
+----------------------+

    $  select upper(name) from employees;
+-------------+
| upper(name) |
+-------------+
| RAJU        |
| PAUL        |
| ALEX        |
| VICTOR      |
+-------------+



    CHAR_LENGTH
    ===========
    $ select char_length("hi world");
+-------------------------+
| char_length("hi world") |
+-------------------------+
|                       8 |
+-------------------------+

    $ select emp_id , char_length(name ) as length from employees;
+--------+--------+
| emp_id | length |
+--------+--------+
|    101 |      4 |
|    103 |      4 |
|    104 |      4 |
|    105 |      6 |
+--------+--------+

    $ select * from employees where char_length(name)>4;
+--------+--------+-----------+---------+
| emp_id | name   | desig     | dept    |
+--------+--------+-----------+---------+
|    105 | Victor | Associate | Deposit |
+--------+--------+-----------+---------+





    Some othe function
    ==================

    $   select insert ("Hello Wassup", 6, 0, "Raju") ;
+---------------------------------------+
| insert ("Hello Wassup", 6, 0, "Raju") |
+---------------------------------------+
| HelloRaju Wassup                      |
+---------------------------------------+

    $   select left ("Abcdef",3);
+-------------------+
| left ("Abcdef",3) |
+-------------------+
| Abc               |
+-------------------+

    $   select right ("Abcdefghij",4);
+------------------------+
| right ("Abcdefghij",4) |
+------------------------+
| ghij                   |
+------------------------+


    $   select repeat ("o",5);
+----------------+
| repeat ("o",5) |
+----------------+
| ooooo          |
+----------------+


    $   select trim ("  Alright!  ");
+----------------------+
| trim("  Alright!  ") |
+----------------------+
| Alright!             |
+----------------------+


    







